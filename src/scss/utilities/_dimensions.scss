// add layout scale elements ass css variables
:root {
  @each $name, $value, $scale-elements in $helpers-layout-scales {
    @each $scale-element-name in $scale-elements {
      @debug $scale-element-name $value;
      --scale-#{$scale-element-name}: rfs(#{$value});
    }
  }
}

// generate width helpers
#{$prioritize-helpers} {
  @each $name, $width-percent, $max-width-px,
    $breakpoints in $helpers-layout-width
  {
    @include max-width-class($name, $width-percent, $max-width-px);
    @each $breakpoint in $breakpoints {
      @include select-breakpoint($breakpoint) {
        @include max-width-class(
          $name,
          $width-percent,
          $max-width-px,
          $breakpoint
        );
      }
    }
  }
}
// ratio
// ratio base
[class*="#{$helpers-layout-ratio-prefix}"] {
  position: relative;
  width: 100%;
  > :first-child {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

@each $name, $width, $height, $breakpoints in $helpers-layout-ratio {
  // generate width helpers width breakpoints
  @each $breakpoint in $breakpoints {
    @include select-breakpoint($breakpoint) {
      @include ratio-class($name, $width, $height, $breakpoint);
    }
  }
}

// flex helpers
/*
@for $i from 1 through $helpers-layout-flexcount {
  @each $breakpoint in $helpers-layout-flexbreakpoints {
    @include select-breakpoint($breakpoint) {
      @include flex-count($i, $breakpoint);
    }
  }
}
*/
